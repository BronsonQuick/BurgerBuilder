{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","password","isSignUp","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","authRedirect","isAuthenticated","to","formElementsArray","key","push","id","config","errorMessage","error","message","form","className","styles","onSubmit","map","formElement","changed","btnType","clicked","loading","Fragment","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","input","inputElement","InputElement","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/4.4d478ca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols:  {\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Your email address'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\tplaceholder: 'Your password'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t},\n\t\tisSignUp: true\n\t}\n\tcomponentDidMount() {\n\t\tif ( !this.props.buildingBurger && this.props.authRedirectPath !== '/' ) {\n\t\t\tthis.props.onSetAuthRedirectPath();\n\t\t}\n\t}\n\tinputChangedHandler = (event, controlName) => {\n\t\tconst updatedControls = {\n\t\t\t...this.state.controls,\n\t\t\t[controlName]: {\n\t\t\t\t...this.state.controls[controlName],\n\t\t\t\tvalue: event.target.value\n\t\t\t}\n\t\t};\n\t\tthis.setState({controls: updatedControls});\n\t}\n\tsubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp );\n\t}\n\tswitchAuthModeHandler = () => {\n\t\tthis.setState( prevState => {\n\t\t\treturn {\n\t\t\t\tisSignUp: !prevState.isSignUp\n\t\t\t}\n\t\t});\n\t}\n\trender() {\n\t\tlet authRedirect = null;\n\t\tif ( this.props.isAuthenticated ) {\n\t\t\tauthRedirect = <Redirect to={this.props.authRedirectPath} />;\n\t\t}\n\t\tconst formElementsArray = [];\n\t\tfor ( let key in this.state.controls ) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key]\n\t\t\t});\n\t\t}\n\t\tlet errorMessage = null;\n\n\t\tif ( this.props.error ) {\n\t\t\terrorMessage = (\n\t\t\t\t<p>{this.props.error.message}</p>\n\t\t\t);\n\t\t}\n\t\tlet form = (\n\t\t\t<div className={styles.Auth}>\n\t\t\t\t{authRedirect}\n\t\t\t\t{ errorMessage }\n\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t{formElementsArray.map( formElement => (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)} />\n\t\t\t\t\t))}\n\t\t\t\t\t<Button btnType=\"Success\">Login</Button>\n\t\t\t\t</form>\n\t\t\t\t<Button\n\t\t\t\t\tbtnType=\"Danger\"\n\t\t\t\t\tclicked={this.switchAuthModeHandler}>\n\t\t\t\t\tSwitch to {this.state.isSignUp ? 'Sign In': 'Sign Up'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t\tif ( this.props.loading ) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{form}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tloading: state.auth.loading,\n\t\terror: state.auth.error,\n\t\tisAuthenticated: state.auth.token !== null,\n\t\tbuildingBurger: state.burgerBuilder.building,\n\t\tauthRedirectPath: state.auth.authRedirectPath\n\t}\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (email, password, isSignUp ) => dispatch(actions.auth(email, password, isSignUp)),\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n\t}\n};\nexport default connect( mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = (props) => {\n\tlet inputElement = null;\n\n\tswitch ( props.elementType ) {\n\t\tcase ('input'):\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('textarea'):\n\t\t\tinputElement = <textarea\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('select'):\n\t\t\tinputElement = ( <select\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} >\n\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t<option value={option.value} key={option.value}>{option.displayValue}</option>\n\t\t\t\t) ) }\n\t\t\t\t</select>);\n\t\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t}\n\treturn (\n\t\t<div className={styles.Input}>\n\t\t\t<label className={styles.Label}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n}\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\"};"],"sourceRoot":""}