{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","styles","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","loading","Spinner","orders","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"+MA4BeA,EAzBD,SAACC,GACd,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAChCA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAEnE,IAAMI,EAAmBL,EAAYM,KACpC,SAAAC,GACC,OAAO,0BACLC,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OACXC,IAAKP,EAAGJ,MAAOI,EAAGJ,KAPZ,KAOoBI,EAAGH,OAPvB,QAUT,OACC,yBAAKW,UAAWC,IAAOC,OACtB,2CAAiBZ,GACjB,qCAAU,sCAAYa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCCf1DC,E,4LAEJC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAmBtD,OAdKH,KAAKxB,MAAM4B,QACN,kBAACC,EAAA,EAAD,MAGR,6BACEL,KAAKxB,MAAM8B,OAAOvB,KAAK,SAAAR,GAAK,OAC5B,kBAACmB,EAAD,CACCH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,gB,GAhBCW,aAqCNC,uBARS,SAAAC,GACvB,MAAO,CACNJ,OAAQI,EAAMnC,MAAM+B,OACpBF,QAASM,EAAMnC,MAAM6B,QACrBF,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAVM,SAAAS,GAC1B,MAAO,CACNX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAWzDM,CAA6CK,YAAiBf,EAAQgB,O,mBC5CrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.fc944c84.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n\tconst ingredients = [];\n\tfor (let ingredientName in props.ingredients) {\n\t\tingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]});\n\t}\n\tconst ingredientOutput = ingredients.map(\n\t\tig => {\n\t\t\treturn <span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextTransform: \"capitalize\",\n\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\t\t\tpadding: '5px'}}\n\t\t\t\tkey={ig.name}>{ig.name} ({ig.amount})</span>;\n\t\t}\n\t)\n\treturn(\n\t\t<div className={styles.Order}>\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>Price: <strong>$: {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n\t\t</div>\n\t);\n}\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../routes/axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onFetchOrders(this.props.token, this.props.userId);\n\t}\n\trender() {\n\t\tlet orders = null;\n\n\t\tif ( this.props.loading ) {\n\t\t\torders = <Spinner />;\n\t\t} else {\n\t\t\torders = (\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.orders.map( order => (\n\t\t\t\t\t\t<Order\n\t\t\t\t\t\t\tkey={order.id}\n\t\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\t\tprice={order.price}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn orders;\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n\t};\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.order.orders,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};"],"sourceRoot":""}