{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","styles","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","purchaseCancelled","purchaseContinued","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","actions","withErrorHandler","useState","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","orderForm","setOrderForm","formElementsArray","key","push","id","config","form","map","formElement","Input","changed","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","inputChangedHandler","preventDefault","formData","formElementIdentifier","Spinner","ContactData","axios","purchase","summary","to","purchasedRedirect","Fragment","history","goBack","replace","path","match","url","component","input","inputElement","InputElement","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.aa00f374.chunk.js","sourcesContent":["import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport styles from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n\treturn (\n\t\t<div className={styles.CheckoutSummary}>\n\t\t\t<h1>We hope you enjoy the burger</h1>\n\t\t\t<div style={{width: '100%', margin: 'auto'}}>\n\t\t\t\t<Burger ingredients={props.ingredients} />\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\tbtnType=\"Danger\"\n\t\t\t\tclicked={props.purchaseCancelled}>Cancel</Button>\n\t\t\t<Button\n\t\t\t\tbtnType=\"Success\"\n\t\t\t\tclicked={props.purchaseContinued}>Continue</Button>\n\t\t</div>\n\t);\n}\nexport default checkoutSummary;\n","import React, { useState } from \"react\";\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../routes/axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport styles from './ContactData.module.css';\nimport * as actions from '../../../store/actions/index';\n\nfunction ContactData(props) {\n\tconst [orderForm, setOrderForm ] = useState({\n\t\t\tname: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Your Name'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tstreet: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Street'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tzipCode: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Postcode'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tcountry: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tplaceholder: 'Your Country'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Your Email'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tdeliveryMethod: {\n\t\t\t\telementType: 'select',\n\t\t\t\telementConfig: {\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{value: 'fastest', displayValue: 'Fastest'},\n\t\t\t\t\t\t{value: 'cheapest', displayValue: 'Cheapest'},\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tvalue: 'fastest'\n\t\t}\n\t});\n\tconst orderHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = {};\n\t\tfor ( let formElementIdentifier in orderForm ) {\n\t\t\tformData[formElementIdentifier] = orderForm[formElementIdentifier].value;\n\t\t}\n\n\t\tconst order = {\n\t\t\tingredients: props.ings,\n\t\t\tprice: props.price,\n\t\t\torderData: formData,\n\t\t\tuserId: props.userId\n\t\t}\n\n\t\tprops.onOrderBurger(order, props.token);\n\t}\n\tconst inputChangedHandler = (event, inputIdentifier) => {\n\t\tconst updatedOrderForm = {\n\t\t\t...orderForm\n\t\t}\n\t\tconst updatedFormElement = {\n\t\t\t...updatedOrderForm[inputIdentifier]\n\t\t}\n\t\tupdatedFormElement.value = event.target.value;\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\n\t\tsetOrderForm(updatedOrderForm);\n\t}\n\tconst formElementsArray = [];\n\tfor ( let key in orderForm ) {\n\t\tformElementsArray.push({\n\t\t\tid: key,\n\t\t\tconfig: orderForm[key]\n\t\t});\n\t}\n\tlet form = (\n\t\t<form>\n\t\t\t\t{formElementsArray.map( formElement => (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\tchanged={(event) => inputChangedHandler(event, formElement.id)} />\n\t\t\t\t))}\n\t\t\t\t<Button btnType=\"Success\" clicked={orderHandler}>Order</Button>\n\t\t\t</form>\n\t);\n\tif (props.loading) {\n\t\tform = <Spinner />;\n\t}\n\treturn(\n\t\t<div className={styles.ContactData} >\n\t\t\t<h4>Enter your contact data</h4>\n\t\t\t{form}\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOrderBurger: (orderData, token ) => dispatch(actions.purchaseBurger(orderData, token))\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tprice: state.burgerBuilder.totalPrice,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token,\n\t\tuserId: state.auth.userId\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport ContactData from '../Checkout/ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nfunction Checkout (props) {\n\tconst checkoutCancelledHander = () => {\n\t\tprops.history.goBack();\n\t}\n\tconst checkoutPurchasedHandler = () => {\n\t\tprops.history.replace('/checkout/contact-data');\n\t}\n\tlet summary = <Redirect to=\"/\" />\n\tif (props.ings) {\n\t\tconst purchasedRedirect = props.purchase ? <Redirect to=\"/\" /> : null;\n\t\tsummary = (\n\t\t\t<React.Fragment>\n\t\t\t\t{purchasedRedirect}\n\t\t\t\t<CheckoutSummary\n\t\t\t\t\tingredients={props.ings}\n\t\t\t\t\tpurchaseCancelled={checkoutCancelledHander}\n\t\t\t\t\tpurchaseContinued={checkoutPurchasedHandler}\n\t\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={props.match.url + '/contact-data'}\n\t\t\t\t\tcomponent={ContactData}/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{summary}\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tpurchase: state.order.purchase\n\t};\n}\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = (props) => {\n\tlet inputElement = null;\n\n\tswitch ( props.elementType ) {\n\t\tcase ('input'):\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('textarea'):\n\t\t\tinputElement = <textarea\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('select'):\n\t\t\tinputElement = ( <select\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} >\n\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t<option value={option.value} key={option.value}>{option.displayValue}</option>\n\t\t\t\t) ) }\n\t\t\t\t</select>);\n\t\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t}\n\treturn (\n\t\t<div className={styles.Input}>\n\t\t\t<label className={styles.Label}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n}\nexport default input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};"],"sourceRoot":""}