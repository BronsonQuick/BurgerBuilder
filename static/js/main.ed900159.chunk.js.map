{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawToggle/DrawToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawToggle/DrawToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","routes/axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","DrawToggle","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawClosedHandler","setState","sideDrawerToggleClicked","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","eject","message","instance","create","baseURL","email","password","isSignUp","dispatch","authData","returnSecureToken","url","process","post","then","userId","expirationTime","data","idToken","localId","expiresIn","setTimeout","catch","console","log","authFailed","BurgerBuilder","purchaseable","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","modalClosed","burgerBuilder","totalPrice","purchase","order","ingName","ingredientName","get","checkoutSummary","styles","CheckoutSummary","width","margin","input","inputElement","elementType","InputElement","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","street","zipCode","country","deliveryMethod","orderHandler","event","preventDefault","formData","formElementIdentifier","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","formElement","loading","orderId","purchaseBurgerSuccess","purchaseBurgerFailed","actions","Checkout","checkoutCancelledHander","goBack","checkoutPurchasedHandler","replace","summary","purchasedRedirect","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","fetchOrdersFail","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","onSubmit","Logout","onLogout","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredients","reducer","newOrder","rootReducers","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed900159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__wtQXh\",\"BreadTop\":\"BurgerIngredients_BreadTop__3M2jF\",\"Seeds1\":\"BurgerIngredients_Seeds1__p7_n-\",\"Seeds2\":\"BurgerIngredients_Seeds2__1nv0c\",\"Meat\":\"BurgerIngredients_Meat__1ylfY\",\"Cheese\":\"BurgerIngredients_Cheese__3qWpp\",\"Salad\":\"BurgerIngredients_Salad__nySHS\",\"Bacon\":\"BurgerIngredients_Bacon__3HC-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawToggle_DrawerToggle__1OfNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n\t<div className={classes.Logo} style={{height: props.height}}>\n\t\t<img src={burgerLogo} alt=\"My Burger\" />\n\t</div>\n);\nexport default logo;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = (props) => (\n\t<li className={classes.NavigationItem}>\n\t\t<NavLink\n\t\t\texact\n\t\t\tto={props.link}\n\t\t\tactiveClassName={classes.active}>\n\t\t\t{props.children}\n\t\t</NavLink>\n\t</li>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\nimport classes from './NavigationItems.module.css';\n\nconst navigationItems = (props) => (\n\t<ul className={classes.NavigationItems}>\n\t\t<NavigationItem link=\"/\">Burger Builder</NavigationItem>\n\t\t<NavigationItem link=\"/orders\">Orders</NavigationItem>\n\t\t{props.isAuthenticated\n\t\t\t? <NavigationItem link=\"/logout\">Logout</NavigationItem>\n\t\t\t:  <NavigationItem link=\"/auth\">Login</NavigationItem>\n\t\t}\n\t</ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport classes from '../DrawToggle/DrawToggle.module.css';\n\nconst drawerToggle = (props) => (\n\t<div onClick={props.clicked} className={classes.DrawerToggle}>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div></div>\n\t</div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\nimport classes from '../Toolbar/Toolbar.module.css';\nimport Logo from '../../../components/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawToggle from '.././SideDrawer/DrawToggle/DrawToggle';\n\nconst toolbar = (props) => (\n\t<header className={classes.Toolbar}>\n\t\t<DrawToggle clicked={props.drawerToggleClicked}/>\n\t\t<div className={classes.Logo}>\n\t\t\t<Logo />\n\t\t</div>\n\t\t<nav className={classes.DesktopOnly}>\n\t\t\t<NavigationItems isAuthenticated={props.isAuth}/>\n\t\t</nav>\n\t</header>\n);\n\nexport default toolbar;\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n\tprops.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\nexport default backdrop;\n","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NagivationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nimport classes from '../SideDrawer/SideDrawer.module.css';\n\nconst sideDrawer = (props) => {\n\tlet attachedClasses = [classes.SideDrawer, classes.Close];\n\tif (props.open) {\n\t\tattachedClasses = [classes.SideDrawer, classes.Open]\n\t}\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<Backdrop show={props.open} clicked={props.closed}/>\n\t\t\t<div className={attachedClasses.join(' ')}>\n\t\t\t\t<div className={classes.Logo}>\n\t\t\t\t\t<Logo />\n\t\t\t\t</div>\n\t\t\t\t<nav>\n\t\t\t\t\t<NagivationItems isAuthenticated={props.isAuth} />\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\nexport default sideDrawer;\n","import React, { Component } from 'react';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.module.css';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n\n    }\n    sideDrawClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n    sideDrawerToggleClicked = () => {\n        this.setState( (prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Toolbar\n                    drawerToggleClicked={this.sideDrawerToggleClicked}\n                    isAuth={this.props.isAuthenticated} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawClosedHandler}\n                    isAuth={this.props.isAuthenticated} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredients.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient type={igKey} key={igKey + i } />;\n        });\n    }).reduce((arr,el) => {\n        return arr.concat(el);\n    }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please add some ingredients to your burger.</p>;\n    }\n    return(\n        <div className={classes.Burger}>\n        <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n        <BurgerIngredient type=\"bread-bottom\" />    \n        </div>\n    );\n};\n\nexport default burger;\n","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n\t<div className={classes.BuildControl}>\n\t\t<div className={classes.Label}>{props.label}</div>\n\t\t<button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n\t\t<button className={classes.More} onClick={props.added}>More</button>\n\t</div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;\n","import React, { Component } from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\tshouldComponentUpdate( nextProps, nextState ) {\n\t\treturn nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Backdrop show={this.props.show} clicked={this.props.clicked}/>\n\t\t\t\t<div className={classes.Modal}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\n\t\t\t\t\t\topacity: this.props.show ? '1': '0'\n\t\t\t\t\t}}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Modal;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n\t<button\n\t\tonClick={props.clicked}\n\t\tclassName={[classes.Button, classes[props.btnType]].join(' ')}\n\t>{props.children}</button>\n);\n\nexport default button;\n","import React, { Component } from 'react';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\trender () {\n\t\tconst ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n\t\t\treturn <li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>\n\t\t});\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>Your Order</h3>\n\t\t\t\t<p>A delicious burger with the following ingredients:</p>\n\t\t\t\t<ul>\n\t\t\t\t{ingredientSummary}\n\t\t\t\t</ul>\n\t\t\t\t<p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n\t\t\t\t<p>Continue to checkout?</p>\n\t\t\t\t<Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n\t\t\t\t<Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n\n\t\t\t</React.Fragment>\n\t\t);\n\t\t\t}\n};\n\nexport default OrderSummary;\n","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n\t<div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n\treturn class extends Component {\n\t\tstate = {\n\t\t\terror: null\n\t\t}\n\t\tcomponentWillMount () {\n\t\t\tthis.requestInterceptor = axios.interceptors.request.use(req => {\n\t\t\t\tthis.setState({error: null});\n\t\t\t\treturn req;\n\t\t\t});\n\t\t\tthis.responseInterceptor = axios.interceptors.response.use( response => response, error => {\n\t\t\t\tthis.setState({error: error });\n\t\t\t});\n\t\t}\n\t\tcomponentWillUnmount () {\n\t\t\taxios.interceptors.request.eject(this.requestInterceptor);\n\t\t\taxios.interceptors.response.eject(this.responseInterceptor);\n\t\t}\n\t\terrorConfirmedHandler = () => {\n\t\t\tthis.setState({error: null});\n\t\t}\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Modal show={this.state.error} clicked={this.errorConfirmedHandler}>\n\t\t\t\t\t\t{this.state.error ? this.state.error.message : null}\n\t\t\t\t\t</Modal>\n\t\t\t\t\t<WrappedComponent {...this.props} />\n\t\t\t\t</React.Fragment>\n\t\t\t) }\n\t}\n}\n\nexport default withErrorHandler;\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://burger-builder-46b8d.firebaseio.com/',\n});\n\nexport default instance;\n","import * as actionTypes from '../actions/actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START\n\t};\n};\n\nexport const authSuccess = (token, userId) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\tidToken: token,\n\t\tuserId: userId\n\t};\n};\n\nexport const authFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAILED,\n\t\terror: error\t\n\t};\n}\n\nexport const logout = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT\n\t}\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n\treturn dispatch => {\n\t\tsetTimeout( ()=>{\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t}\n}\n\nexport const auth = (email, password, isSignUp) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true\n\t\t}\n\t\tlet url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_API_KEY}`;\n\n\t\tif ( !isSignUp ) {\n\t\t\turl = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_API_KEY}`;\n\t\t}\n\n\t\taxios.post(url,authData)\n\t\t\t.then(response => {\n\t\t\t\tdispatch(authSuccess(response.data.idToken, response.data.localId));\n\t\t\t\tdispatch(checkAuthTimeout(response.data.expiresIn));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tdispatch(authFailed(error.response.data.error));\n\t\t\t}) \n\t};\n};\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import React, { Component } from 'react';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport axios from '../../routes/axios-orders';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchaseable: false,\n        purchasing: false,\n        error: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchased();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p style={{textAlign: \"center\"}}>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <React.Fragment>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </React.Fragment>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        return (\n            <React.Fragment>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        purchase: state.order.purchase\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchased: () => dispatch(actions.purchaseInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));\n","import * as actionTypes from '../actions/actionTypes';\nimport axios from '../../routes/axios-orders';\n\nexport const addIngredient = (name) => {\n\treturn {\n\t\ttype: actionTypes.ADD_INGREDIENT,\n\t\tingredientName: name\n\t}\n};\n\nexport const removeIngredient = (name) => {\n\treturn {\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\n\t\tingredientName: name\n\t}\n};\n\nexport const setIngredients = (ingredients) => {\n\treturn {\n\t\ttype: actionTypes.SET_INGREDIENTS,\n\t\tingredients: ingredients\n\t}\n}\n\nexport const fetchIngredientsFailed = () => {\n\treturn {\n\t\ttype: actionTypes.FETCH_INGREDIENTS_FAILED\n\t}\n};\n\nexport const initIngredients = () => {\n\treturn dispatch => {\n\t\taxios.get('/ingredients.json')\n        .then( response => {\n            dispatch(setIngredients(response.data))\n        })\n        .catch(error => {\n\t\t\tdispatch(fetchIngredientsFailed());\n        })\n\t}\n}\n","import * as actionTypes from './actionTypes';\nimport axios from '../../routes/axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_SUCCESS,\n\t\torderId: id,\n\t\torderData: orderData\n\t};\n};\n\nexport const purchaseBurgerFailed = (error) => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_FAILED,\n\t\terror: error\n\t}\n}\n\nexport const purchaseBurgerStart = () => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_BURGER_START\n\t}\n}\n\nexport const purchaseBurger = (orderData, token) => {\n\treturn dispatch => {\n\t\tdispatch(purchaseBurgerStart());\n\t\taxios.post( '/orders.json?auth=' + token, orderData )\n\t\t.then( response => {\n\t\t\tdispatch(purchaseBurgerSuccess(response.data.name, orderData))\n\t\t} )\n\t\t.catch( error => {\n\t\t\tdispatch(purchaseBurgerFailed(error));\n\t\t} );\n\t}\n};\n\nexport const purchaseInit = () => {\n\treturn {\n\t\ttype: actionTypes.PURCHASE_INIT\n\t}\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n\treturn {\n\t\ttype: actionTypes.FETCH_ORDERS_SUCCESS,\n\t\torders: orders\n\t}\n};\n\nexport const fetchOrdersFail = (error) => {\n\treturn {\n\t\ttype: actionTypes.FETCH_ORDERS_FAILED,\n\t\terror: error\n\t}\n}\n\nexport const fetchOrdersStart = () => {\n\treturn {\n\t\ttype: actionTypes.FETCH_ORDERS_START\n\t}\n}\n\nexport const fetchOrders = (token) => {\n\treturn dispatch => {\n\t\tdispatch(fetchOrdersStart());\n\t\taxios.get('/orders.json?auth=' + token)\n\t\t.then( response => {\n\t\t\tconst fetchedOrders = [];\n\t\t\tfor ( let key in response.data ) {\n\t\t\t\tfetchedOrders.push({\n\t\t\t\t\t...response.data[key],\n\t\t\t\t\tid: key\n\t\t\t\t});\n\t\t\t}\n\t\t\tdispatch(fetchOrdersSuccess(fetchedOrders));\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch(fetchOrdersFail(error));\n\t\t});\n\t}\n};\n","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport styles from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n\treturn (\n\t\t<div className={styles.CheckoutSummary}>\n\t\t\t<h1>We hope you enjoy the burger</h1>\n\t\t\t<div style={{width: '100%', margin: 'auto'}}>\n\t\t\t\t<Burger ingredients={props.ingredients} />\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\tbtnType=\"Danger\"\n\t\t\t\tclicked={props.purchaseCancelled}>Cancel</Button>\n\t\t\t<Button\n\t\t\t\tbtnType=\"Success\"\n\t\t\t\tclicked={props.purchaseContinued}>Continue</Button>\n\t\t</div>\n\t);\n}\nexport default checkoutSummary;\n","import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = (props) => {\n\tlet inputElement = null;\n\n\tswitch ( props.elementType ) {\n\t\tcase ('input'):\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('textarea'):\n\t\t\tinputElement = <textarea\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t\t\tbreak;\n\t\tcase ('select'):\n\t\t\tinputElement = ( <select\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} >\n\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t<option value={option.value} key={option.value}>{option.displayValue}</option>\n\t\t\t\t) ) }\n\t\t\t\t</select>);\n\t\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input\n\t\t\t\tclassName={styles.InputElement}\n\t\t\t\t{...props.elementConfig}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.changed} />;\n\t}\n\treturn (\n\t\t<div className={styles.Input}>\n\t\t\t<label className={styles.Label}>{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n}\nexport default input;\n","import React, { Component } from \"react\";\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../routes/axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport styles from './ContactData.module.css';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n\tstate = {\n\t\torderForm: {\n\t\t\t\tname: {\n\t\t\t\t\telementType: 'input',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tplaceholder: 'Your Name'\n\t\t\t\t\t},\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\tstreet: {\n\t\t\t\t\telementType: 'input',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tplaceholder: 'Street'\n\t\t\t\t\t},\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\tzipCode: {\n\t\t\t\t\telementType: 'input',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tplaceholder: 'Postcode'\n\t\t\t\t\t},\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\tcountry: {\n\t\t\t\t\telementType: 'input',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tplaceholder: 'Your Country'\n\t\t\t\t\t},\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\temail: {\n\t\t\t\t\telementType: 'input',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\tplaceholder: 'Your Email'\n\t\t\t\t\t},\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\tdeliveryMethod: {\n\t\t\t\t\telementType: 'select',\n\t\t\t\t\telementConfig: {\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{value: 'fastest', displayValue: 'Fastest'},\n\t\t\t\t\t\t\t{value: 'cheapest', displayValue: 'Cheapest'},\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tvalue: 'fastest'\n\t\t\t\t}\n\t\t}\n\t}\n\torderHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = {};\n\t\tfor ( let formElementIdentifier in this.state.orderForm ) {\n\t\t\tformData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n\t\t}\n\n\t\tconst order = {\n\t\t\tingredients: this.props.ings,\n\t\t\tprice: this.props.price,\n\t\t\torderData: formData\n\t\t}\n\n\t\tthis.props.onOrderBurger(order, this.props.token);\n\t}\n\tinputChangedHandler = (event, inputIdentifier) => {\n\t\tconst updatedOrderForm = {\n\t\t\t...this.state.orderForm\n\t\t}\n\t\tconst updatedFormElement = {\n\t\t\t...updatedOrderForm[inputIdentifier]\n\t\t}\n\t\tupdatedFormElement.value = event.target.value;\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\n\t\tthis.setState({orderForm: updatedOrderForm })\n\t}\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor ( let key in this.state.orderForm ) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.orderForm[key]\n\t\t\t});\n\t\t}\n\t\tlet form = (\n\t\t\t<form>\n\t\t\t\t\t{formElementsArray.map( formElement => (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)} />\n\t\t\t\t\t))}\n\t\t\t\t\t<Button btnType=\"Success\" clicked={this.orderHandler}>Order</Button>\n\t\t\t\t</form>\n\t\t);\n\t\tif (this.props.loading) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn(\n\t\t\t<div className={styles.ContactData} >\n\t\t\t\t<h4>Enter your contact data</h4>\n\t\t\t\t{form}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOrderBurger: (orderData, token ) => dispatch(actions.purchaseBurger(orderData, token))\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tprice: state.burgerBuilder.totalPrice,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React from 'react';\nimport { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport ContactData from '../Checkout/ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n\tcheckoutCancelledHander = () => {\n\t\tthis.props.history.goBack();\n\t}\n\tcheckoutPurchasedHandler = () => {\n\t\tthis.props.history.replace('/checkout/contact-data');\n\t}\n\trender() {\n\t\tlet summary = <Redirect to=\"/\" />\n\t\tif (this.props.ings) {\n\t\t\tconst purchasedRedirect = this.props.purchase ? <Redirect to=\"/\" /> : null;\n\t\t\tsummary = (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{purchasedRedirect}\n\t\t\t\t\t<CheckoutSummary\n\t\t\t\t\t\tingredients={this.props.ings}\n\t\t\t\t\t\tpurchaseCancelled={this.checkoutCancelledHander}\n\t\t\t\t\t\tpurchaseContinued={this.checkoutPurchasedHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={this.props.match.url + '/contact-data'}\n\t\t\t\t\t\tcomponent={ContactData}/>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{summary}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tings: state.burgerBuilder.ingredients,\n\t\tpurchase: state.order.purchase\n\t};\n}\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n\tconst ingredients = [];\n\tfor (let ingredientName in props.ingredients) {\n\t\tingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]});\n\t}\n\tconst ingredientOutput = ingredients.map(\n\t\tig => {\n\t\t\treturn <span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextTransform: \"capitalize\",\n\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\t\tborder: '1px solid #ccc',\n\t\t\t\t\t\tpadding: '5px'}}\n\t\t\t\tkey={ig.name}>{ig.name} ({ig.amount})</span>;\n\t\t}\n\t)\n\treturn(\n\t\t<div className={styles.Order}>\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\n\t\t\t<p>Price: <strong>$: {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n\t\t</div>\n\t);\n}\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../routes/axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onFetchOrders(this.props.token);\n\t}\n\trender() {\n\t\tlet orders = null;\n\n\t\tif ( this.props.loading ) {\n\t\t\torders = <Spinner />;\n\t\t} else {\n\t\t\torders = (\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.orders.map( order => (\n\t\t\t\t\t\t<Order\n\t\t\t\t\t\t\tkey={order.id}\n\t\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\t\tprice={order.price}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn orders;\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonFetchOrders: (token) => dispatch(actions.fetchOrders(token))\n\t};\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.order.orders,\n\t\tloading: state.order.loading,\n\t\ttoken: state.auth.token\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols:  {\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Your email address'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\tplaceholder: 'Your password'\n\t\t\t\t},\n\t\t\t\tvalue: ''\n\t\t\t},\n\t\t},\n\t\tisSignUp: true\n\t}\n\tinputChangedHandler = (event, controlName) => {\n\t\tconst updatedControls = {\n\t\t\t...this.state.controls,\n\t\t\t[controlName]: {\n\t\t\t\t...this.state.controls[controlName],\n\t\t\t\tvalue: event.target.value\n\t\t\t}\n\t\t};\n\t\tthis.setState({controls: updatedControls});\n\t}\n\tsubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp );\n\t}\n\tswitchAuthModeHandler = () => {\n\t\tthis.setState( prevState => {\n\t\t\treturn {\n\t\t\t\tisSignUp: !prevState.isSignUp\n\t\t\t}\n\t\t});\n\t}\n\trender() {\n\t\tconst formElementsArray = [];\n\t\tfor ( let key in this.state.controls ) {\n\t\t\tformElementsArray.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key]\n\t\t\t});\n\t\t}\n\t\tlet errorMessage = null;\n\n\t\tif ( this.props.error ) {\n\t\t\terrorMessage = (\n\t\t\t\t<p>{this.props.error.message}</p>\n\t\t\t);\n\t\t}\n\t\tlet form = (\n\t\t\t<div className={styles.Auth}>\n\t\t\t\t{ errorMessage }\n\t\t\t\t<form onSubmit={this.submitHandler}>\n\t\t\t\t\t{formElementsArray.map( formElement => (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tkey={formElement.id}\n\t\t\t\t\t\t\telementType={formElement.config.elementType}\n\t\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\t\t\t\t\tvalue={formElement.config.value}\n\t\t\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)} />\n\t\t\t\t\t))}\n\t\t\t\t\t<Button btnType=\"Success\">Login</Button>\n\t\t\t\t</form>\n\t\t\t\t<Button\n\t\t\t\t\tbtnType=\"Danger\"\n\t\t\t\t\tclicked={this.switchAuthModeHandler}>\n\t\t\t\t\tSwitch to {this.state.isSignUp ? 'Sign In': 'Sign Up'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t\tif ( this.props.loading ) {\n\t\t\tform = <Spinner />;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{form}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tloading: state.auth.loading,\n\t\terror: state.auth.error\n\t}\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (email, password, isSignUp ) => dispatch(actions.auth(email, password, isSignUp))\n\t}\n};\nexport default connect( mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onLogout();\n\t}\n\trender() {\n\t\treturn <Redirect to=\"/\" />;\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonLogout: () => dispatch(actions.logout())\n\t}\n};\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\n\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/orders\" component={Orders} />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const updateObject = (oldObject, updatedProperties) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedProperties\n\t}\n};\nexport default updateObject;\n","import * as actionTypes from '../actions/actionTypes';\nimport updateObject from '../utility';\n\nconst initialState = {\n\tingredients: null,\n\ttotalPrice: 4,\n\terror: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = (state,action) => {\n\tconst updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\n\tconst updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n\tconst updatedState = {\n\t\tingredients: updatedIngredients,\n\t\ttotalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state,action) => {\n\tconst updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\n\tconst updatedIngs = updateObject(state.ingredients, updatedIng);\n\tconst updatedSt = {\n\t\tingredients: updatedIngs,\n\t\ttotalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n\t}\n\treturn updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n\treturn updateObject(state,{\n\t\tingredients: {\n\t\t\tsalad: action.ingredients.salad,\n\t\t\tbacon: action.ingredients.bacon,\n\t\t\tcheese: action.ingredients.cheese,\n\t\t\tmeat: action.ingredients.meat\n\t\t},\n\t\ttotalPrice: 4,\n\t\terror: false\n\t});\n}\n\nconst fetchIngredients = (state, action ) => {\n\treturn updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n\tswitch( action.type ) {\n\t\tcase actionTypes.ADD_INGREDIENT: return addIngredient(state,action);\n\t\tcase actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n\t\tcase actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredients(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport updateObject from '../utility';\n\nconst initialState = {\n\torders: [],\n\tloading: false,\n\tpurchase: false\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.FETCH_ORDERS_START:\n\t\t\treturn updateObject( state, { loading: true})\n\t\tcase actionTypes.FETCH_ORDERS_SUCCESS:\n\t\t\treturn updateObject( state, { orders: action.orders, loading: false })\n\t\tcase actionTypes.FETCH_ORDERS_FAILED: \n\t\t\treturn updateObject(state, { loading: false })\n\t\tcase actionTypes.PURCHASE_INIT:\n\t\t\treturn updateObject(state, {purchase: false})\n\t\tcase actionTypes.PURCHASE_BURGER_START:\n\t\t\treturn updateObject(state, {loading: true })\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\n\t\t\tconst newOrder = updateObject( action.orderData, { id: action.orderId } );\n\t\t\treturn updateObject(state, {\n\t\t\t\tloading: false,\n\t\t\t\torders: state.orders.concat(newOrder),\n\t\t\t\tpurchase: true });\n\t\tcase actionTypes.PURCHASE_BURGER_FAILED:\n\t\t\treturn updateObject(state, {loading: false})\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport updateObject from '../utility';\n\nconst initialState = {\n\ttoken: null,\n\tuserId: null,\n\terror: null,\n\tloading: false\n}\n\nconst reducer = (state = initialState, action) => {\n\tswitch ( action.type ) {\n\t\tcase actionTypes.AUTH_START:\n\t\t\treturn updateObject(state, {error: null, loading: true });\n\t\tcase actionTypes.AUTH_SUCCESS:\n\t\t\treturn updateObject(state, {token: action.idToken, userId: action.userId, error: null, loading: false });\n\t\tcase actionTypes.AUTH_FAILED:\n\t\t\treturn updateObject(state, {loading: false, error: action.error });\n\t\tcase actionTypes.AUTH_LOGOUT:\n\t\t\treturn updateObject(state, {token: null, userId: null});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst rootReducers = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torder: orderReducer,\n\tauth: authReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}